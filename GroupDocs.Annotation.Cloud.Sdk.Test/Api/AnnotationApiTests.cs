using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using GroupDocs.Annotation.Cloud.Sdk.Api;
using GroupDocs.Annotation.Cloud.Sdk.Model;
using GroupDocs.Annotation.Cloud.Sdk.Model.Requests;
using GroupDocs.Annotation.Cloud.Sdk.Model.Responses;

namespace GroupDocs.Annotation.Cloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing AnnotationApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class AnnotationApiTests: TestsSetup
    {
        /// <summary>
        /// Test an instance of AnnotationApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf(typeof(AnnotationApi), _annotationApi, "instance is a AnnotationApi");
        }
        /// <summary>
        /// Test DeleteCleanDocument
        /// </summary>
        [Test]
        public void DeleteCleanDocumentTest()
        {
            DeleteCleanDocumentRequest request = new DeleteCleanDocumentRequest("one-page.pdf", "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _annotationApi.DeleteCleanDocument(request);
            Assert.IsInstanceOf<System.IO.Stream>(response, "response is System.IO.Stream");
        }
        /// <summary>
        /// Test GetImport
        /// </summary>
        [Test]
        public void GetImportTest()
        {
            GetImportRequest request = new GetImportRequest("one-page-annotated.pdf", "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _annotationApi.GetImport(request);
            Assert.IsInstanceOf<ResponseWrapper>(response, "response is ResponseWrapper");
        }
        /// <summary>
        /// Test PutExport
        /// </summary>
        [Test]
        public void PutExportTest()
        {
            List<AnnotationInfo> annotations = new List<AnnotationInfo>();
                          AnnotationInfo annotation = new AnnotationInfo
                          {
                              AnnotationPosition = new Point(852, 154.31),
                              Replies = new[]
                              {
                                  new AnnotationReplyInfo {Message = "reply text", RepliedOn = DateTime.Now, UserName = "Admin"},
                                  new AnnotationReplyInfo
                                  {
                                      Message = "reply2 text",
                                      RepliedOn = DateTime.Now,
                                      UserName = "Commentator"
                                  }
                              },
                              Box = new Rectangle((float) 173.29, (float) 154.31, (float) 142.5, 9),
                              PageNumber = 0,
                              SvgPath =
                                  "[{\"x\":173.2986,\"y\":687.5769},{\"x\":315.7985,\"y\":687.5769},{\"x\":173.2986,\"y\":678.5769},{\"x\":315.7985,\"y\":678.5769}]",
                              Type = AnnotationType.Text,
                              CreatorName = "Anonym A."
                          };
            annotations.Add(annotation);
            PutExportRequest request = new PutExportRequest("one-page.pdf", annotations, "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _annotationApi.PutExport(request);
            Assert.IsInstanceOf<System.IO.Stream>(response, "response is System.IO.Stream");
        }
    }

}
