using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using GroupDocs.Annotation.Cloud.Sdk.Api;
using GroupDocs.Annotation.Cloud.Sdk.Model;
using GroupDocs.Annotation.Cloud.Sdk.Model.Requests;

namespace GroupDocs.Annotation.Cloud.Sdk.Test.Api
{
    /// <summary>
    ///  Class for testing ImagePagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class ImagePagesApiTests: TestsSetup
    {
        /// <summary>
        /// Test an instance of ImagePagesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf(typeof(ImagePagesApi), _imagePagesApi, "instance is a ImagePagesApi");
        }
        /// <summary>
        /// Test PostPages
        /// </summary>
        [Test]
        public void PostPagesTest()
        {
            PostPagesRequest request = new PostPagesRequest("one-page.pdf", "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _imagePagesApi.PostPages(request);
            Assert.IsInstanceOf<ImagePages>(response, "response is ImagePages");
        }
        /// <summary>
        /// Test GetPage
        /// </summary>
        [Test]
        public void GetPageTest()
        {
            GetPageRequest request = new GetPageRequest("one-page.pdf", 0, "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _imagePagesApi.GetPage(request);
            Assert.IsInstanceOf<ImagePage>(response, "response is ImagePage");
        }
        /// <summary>
        /// Test GetPages
        /// </summary>
        [Test]
        public void GetPagesTest()
        {
            GetPagesRequest request = new GetPagesRequest("one-page.pdf", "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _imagePagesApi.GetPages(request);
            Assert.IsInstanceOf<ImagePages>(response, "response is ImagePages");
        }
        /// <summary>
        /// Test DeletePages
        /// </summary>
        [Test]
        public void DeletePagesTest()
        {
            DeletePagesRequest request = new DeletePagesRequest("one-page.pdf", "gfc-testdata/testsdata/groupdocs.annotation");
            var response = _imagePagesApi.DeletePages(request);
            Assert.IsInstanceOf<System.IO.Stream>(response, "response is System.IO.Stream");
        }
    }

}
